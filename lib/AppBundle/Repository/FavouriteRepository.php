<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Favourite;
use AppBundle\Entity\Initiative;
use AppBundle\Entity\User;
use AppBundle\Enum\FavouriteEnum;
use Doctrine\ORM\AbstractQuery;
use Doctrine\ORM\EntityRepository;

/**
 * FavouriteRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class FavouriteRepository extends EntityRepository
{

    /**
     * @param User $user
     * @param Initiative $initiative
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getFavouriteByUserAndInitiative(User $user, Initiative $initiative)
    {
        return $this->createQueryBuilder('f')
            ->andWhere('f.user = :user')
            ->andWhere('f.initiative = :initiative')
            ->andWhere('f.type = :type')
            ->setParameter('user', $user)
            ->setParameter('initiative', $initiative)
            ->setParameter('type', FavouriteEnum::TYPE_INITIATIVE)
            ->getQuery()
            ->getOneOrNullResult(AbstractQuery::HYDRATE_OBJECT);
    }

    /**
     * @param User $user
     * @param User $friend
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getFriendByUser(User $user, User $friend)
    {
        return $this->createQueryBuilder('f')
            ->andWhere('f.user = :user')
            ->andWhere('f.friend = :friend')
            ->andWhere('f.type = :type')
            ->setParameter('user', $user)
            ->setParameter('friend', $friend)
            ->setParameter('type', FavouriteEnum::TYPE_USER)
            ->getQuery()
            ->getOneOrNullResult(AbstractQuery::HYDRATE_OBJECT);
    }

}
