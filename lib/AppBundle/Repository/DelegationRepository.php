<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Category;
use AppBundle\Entity\Delegation;
use AppBundle\Entity\User;
use Doctrine\ORM\AbstractQuery;
use Doctrine\ORM\EntityRepository;

/**
 * DelegationRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class DelegationRepository extends EntityRepository
{

    public function createAlphabeticalQueryBuilder()
    {        return $this->createQueryBuilder('delegation')
        ->orderBy('delegation.user', 'ASC');
    }

    /**
     * get global delegations for an user
     *
     * @param User $user
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getDelegationGlobalByUser(User $user)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        $q  = $qb->select(array('d'))
            ->from(Delegation::class, 'd')
            ->andWhere('d.user = :user')
            ->andWhere('d.scope = 0')
            ->setParameter('user', $user)
            ->getQuery();

        return $q->getOneOrNullResult(AbstractQuery::HYDRATE_OBJECT);
    }

    /**
     * get delegations by category for an user
     * @param Category $category
     * @param User $user
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getDelegationByCategoryAndUser(Category $category, User $user)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        $q  = $qb->select(array('d'))
            ->from(Delegation::class, 'd')
            ->andWhere('d.user = :user')
            ->andWhere('d.category = :category')
            ->setParameter('user', $user)
            ->setParameter('category', $category)
            ->getQuery();

        return $q->getOneOrNullResult(AbstractQuery::HYDRATE_OBJECT);
    }

    /**
     * @param User $user
     * @return mixed
     */
    public function getDelegationsByUser(User $user)
    {
        $em = $this->getEntityManager();
        $qb = $em->createQueryBuilder();

        $q  = $qb->select(array('d','c'))
            ->from(Delegation::class, 'd')
            ->join("d.category","c")
            ->andWhere('d.user = :user')
            ->setParameter('user', $user)
            ->getQuery();

        return $q->execute();
    }

}
